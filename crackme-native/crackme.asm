; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30151.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

PUBLIC	?EnumWindowsProc@@YAHPEAUHWND__@@_J@Z		; EnumWindowsProc
PUBLIC	?WriteConsoleA@@YAXPEBD@Z			; WriteConsoleA
PUBLIC	?ReadConsoleA@@YAXPEADK@Z			; ReadConsoleA
PUBLIC	?HexCharToByte@@YAED@Z				; HexCharToByte
PUBLIC	?HexStringToByteArray@@YA_NPEBDPEAEK@Z		; HexStringToByteArray
PUBLIC	?HashString@@YA_NPEBDPEAEAEAK@Z			; HashString
PUBLIC	?CompareByteArrays@@YA_NPEBE0K@Z		; CompareByteArrays
PUBLIC	?RealCode@@YAXXZ				; RealCode
PUBLIC	?AntiDump@@YAXXZ				; AntiDump
PUBLIC	?TCDB@@YAKPEAX@Z				; TCDB
PUBLIC	WinMainCRTStartup
PUBLIC	??_C@_0BO@OKHNJLFG@CryptAcquireContext?5failed?3?5?6@ ; `string'
PUBLIC	??_C@_0BK@KFAHCNKC@CryptCreateHash?5failed?3?5?6@ ; `string'
PUBLIC	??_C@_0BI@HHELBBLE@CryptHashData?5failed?3?5?6@	; `string'
PUBLIC	??_C@_0BM@HCOHJBH@CryptGetHashParam?5failed?3?5?6@ ; `string'
PUBLIC	??_C@_08JNCFBAMI@Crack?5Me@			; `string'
PUBLIC	??_C@_0EB@GCBIBAKK@22152bf604ed0ae4e799c3c6435b88e@ ; `string'
PUBLIC	??_C@_0EB@PIIBGPBG@1b816939ff203c1f721f476a9f98862@ ; `string'
PUBLIC	??_C@_06LCFEENDA@User?3?5@			; `string'
PUBLIC	??_C@_06PJGOMEEA@Pass?3?5@			; `string'
PUBLIC	??_C@_0BP@GLHKHOJH@Congratulations?5u?5now?5are?5gay?$CB@ ; `string'
PUBLIC	??_C@_07EPIGEAP@Wrong?$CB?6@			; `string'
PUBLIC	??_C@_0BK@DLDGDFJN@RtlCreateQueryDebugBuffer@	; `string'
PUBLIC	??_C@_09FLKFJBLM@ntdll?4dll@			; `string'
PUBLIC	??_C@_0BL@KPBKBMEI@RtlDestroyQueryDebugBuffer@	; `string'
PUBLIC	??_C@_0CA@CHDGPPCA@RtlQueryProcessDebugInformation@ ; `string'
PUBLIC	??_C@_0BK@EGDDIFMK@NtQueryInformationProcess@	; `string'
PUBLIC	??_C@_0BC@KNBMEBEO@IsDebuggerPresent@		; `string'
PUBLIC	??_C@_0N@MDJJJHMB@kernel32?4dll@		; `string'
PUBLIC	??_C@_0BL@FJLANNDC@CheckRemoteDebuggerPresent@	; `string'
EXTRN	__imp_GetStdHandle:PROC
EXTRN	__imp_Sleep:PROC
EXTRN	__imp_GetCurrentProcess:PROC
EXTRN	__imp_GetCurrentProcessId:PROC
EXTRN	__imp_ExitProcess:PROC
EXTRN	__imp_CreateThread:PROC
EXTRN	__imp_GetLocalTime:PROC
EXTRN	__imp_GetModuleHandleA:PROC
EXTRN	__imp_GetProcAddress:PROC
EXTRN	__imp_LoadLibraryA:PROC
EXTRN	__imp_SystemTimeToFileTime:PROC
EXTRN	__imp_EnumWindows:PROC
EXTRN	__imp_GetWindowThreadProcessId:PROC
EXTRN	__imp_ReadConsoleA:PROC
EXTRN	__imp_WriteConsoleA:PROC
EXTRN	__imp_GetConsoleScreenBufferInfo:PROC
EXTRN	__imp_SetConsoleWindowInfo:PROC
EXTRN	__imp_SetConsoleTitleA:PROC
EXTRN	__imp_CryptAcquireContextA:PROC
EXTRN	__imp_CryptReleaseContext:PROC
EXTRN	__imp_CryptGetHashParam:PROC
EXTRN	__imp_CryptCreateHash:PROC
EXTRN	__imp_CryptHashData:PROC
EXTRN	__imp_CryptDestroyHash:PROC
EXTRN	?NewCharArray@@YAPEAD_K@Z:PROC			; NewCharArray
_BSS	SEGMENT
?pfn_RtlCreateQueryDebugBuffer@@3P6APEAU_RTL_DEBUG_INFORMATION@@KK@ZEA DQ 01H DUP (?) ; pfn_RtlCreateQueryDebugBuffer
?pfn_RtlDestroyQueryDebugBuffer@@3P6AJPEAU_RTL_DEBUG_INFORMATION@@@ZEA DQ 01H DUP (?) ; pfn_RtlDestroyQueryDebugBuffer
?pfn_RtlQueryProcessDebugInformation@@3P6AJKKPEAU_RTL_DEBUG_INFORMATION@@@ZEA DQ 01H DUP (?) ; pfn_RtlQueryProcessDebugInformation
?pfn_IsDebuggerPresent@@3P6AHXZEA DQ 01H DUP (?)	; pfn_IsDebuggerPresent
?pfn_CheckRemoteDebuggerPresent@@3P6AHPEAXPEAH@ZEA DQ 01H DUP (?) ; pfn_CheckRemoteDebuggerPresent
?pfn_NtQueryInformationProcess@@3P6AHPEAXW4_PROCESSINFOCLASS@@0KPEAK@ZEA DQ 01H DUP (?) ; pfn_NtQueryInformationProcess
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dynamic_system_func_load@@YAP6A_JXZPEBD0@Z DD imagerel ?dynamic_system_func_load@@YAP6A_JXZPEBD0@Z
	DD	imagerel ?dynamic_system_func_load@@YAP6A_JXZPEBD0@Z+75
	DD	imagerel $unwind$?dynamic_system_func_load@@YAP6A_JXZPEBD0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?EnumWindowsProc@@YAHPEAUHWND__@@_J@Z DD imagerel $LN5
	DD	imagerel $LN5+71
	DD	imagerel $unwind$?EnumWindowsProc@@YAHPEAUHWND__@@_J@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?WriteConsoleA@@YAXPEBD@Z DD imagerel $LN5
	DD	imagerel $LN5+74
	DD	imagerel $unwind$?WriteConsoleA@@YAXPEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ReadConsoleA@@YAXPEADK@Z DD imagerel $LN4
	DD	imagerel $LN4+77
	DD	imagerel $unwind$?ReadConsoleA@@YAXPEADK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?HashString@@YA_NPEBDPEAEAEAK@Z DD imagerel $LN19
	DD	imagerel $LN19+428
	DD	imagerel $unwind$?HashString@@YA_NPEBDPEAEAEAK@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?RealCode@@YAXXZ DD imagerel $LN121
	DD	imagerel $LN121+808
	DD	imagerel $unwind$?RealCode@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?TCDB@@YAKPEAX@Z DD imagerel $LN67
	DD	imagerel $LN67+511
	DD	imagerel $unwind$?TCDB@@YAKPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$0$?TCDB@@YAKPEAX@Z DD imagerel $LN67+511
	DD	imagerel $LN67+562
	DD	imagerel $chain$0$?TCDB@@YAKPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$1$?TCDB@@YAKPEAX@Z DD imagerel $LN67+562
	DD	imagerel $LN67+874
	DD	imagerel $chain$1$?TCDB@@YAKPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$WinMainCRTStartup DD imagerel $LN8
	DD	imagerel $LN8+61
	DD	imagerel $unwind$WinMainCRTStartup
pdata	ENDS
;	COMDAT ??_C@_0BL@FJLANNDC@CheckRemoteDebuggerPresent@
CONST	SEGMENT
??_C@_0BL@FJLANNDC@CheckRemoteDebuggerPresent@ DB 'CheckRemoteDebuggerPre'
	DB	'sent', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0N@MDJJJHMB@kernel32?4dll@
CONST	SEGMENT
??_C@_0N@MDJJJHMB@kernel32?4dll@ DB 'kernel32.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BC@KNBMEBEO@IsDebuggerPresent@
CONST	SEGMENT
??_C@_0BC@KNBMEBEO@IsDebuggerPresent@ DB 'IsDebuggerPresent', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@EGDDIFMK@NtQueryInformationProcess@
CONST	SEGMENT
??_C@_0BK@EGDDIFMK@NtQueryInformationProcess@ DB 'NtQueryInformationProce'
	DB	'ss', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0CA@CHDGPPCA@RtlQueryProcessDebugInformation@
CONST	SEGMENT
??_C@_0CA@CHDGPPCA@RtlQueryProcessDebugInformation@ DB 'RtlQueryProcessDe'
	DB	'bugInformation', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BL@KPBKBMEI@RtlDestroyQueryDebugBuffer@
CONST	SEGMENT
??_C@_0BL@KPBKBMEI@RtlDestroyQueryDebugBuffer@ DB 'RtlDestroyQueryDebugBu'
	DB	'ffer', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_09FLKFJBLM@ntdll?4dll@
CONST	SEGMENT
??_C@_09FLKFJBLM@ntdll?4dll@ DB 'ntdll.dll', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@DLDGDFJN@RtlCreateQueryDebugBuffer@
CONST	SEGMENT
??_C@_0BK@DLDGDFJN@RtlCreateQueryDebugBuffer@ DB 'RtlCreateQueryDebugBuff'
	DB	'er', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_07EPIGEAP@Wrong?$CB?6@
CONST	SEGMENT
??_C@_07EPIGEAP@Wrong?$CB?6@ DB 'Wrong!', 0aH, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0BP@GLHKHOJH@Congratulations?5u?5now?5are?5gay?$CB@
CONST	SEGMENT
??_C@_0BP@GLHKHOJH@Congratulations?5u?5now?5are?5gay?$CB@ DB 'Congratulat'
	DB	'ions u now are gay!', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_06PJGOMEEA@Pass?3?5@
CONST	SEGMENT
??_C@_06PJGOMEEA@Pass?3?5@ DB 'Pass: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_06LCFEENDA@User?3?5@
CONST	SEGMENT
??_C@_06LCFEENDA@User?3?5@ DB 'User: ', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@PIIBGPBG@1b816939ff203c1f721f476a9f98862@
CONST	SEGMENT
??_C@_0EB@PIIBGPBG@1b816939ff203c1f721f476a9f98862@ DB '1b816939ff203c1f7'
	DB	'21f476a9f98862c4170f0420c87fc24a9ffcf39befcace7', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@GCBIBAKK@22152bf604ed0ae4e799c3c6435b88e@
CONST	SEGMENT
??_C@_0EB@GCBIBAKK@22152bf604ed0ae4e799c3c6435b88e@ DB '22152bf604ed0ae4e'
	DB	'799c3c6435b88e699374832a9aeb161d47fc6b60123daad', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_08JNCFBAMI@Crack?5Me@
CONST	SEGMENT
??_C@_08JNCFBAMI@Crack?5Me@ DB 'Crack Me', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0BM@HCOHJBH@CryptGetHashParam?5failed?3?5?6@
CONST	SEGMENT
??_C@_0BM@HCOHJBH@CryptGetHashParam?5failed?3?5?6@ DB 'CryptGetHashParam '
	DB	'failed: ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BI@HHELBBLE@CryptHashData?5failed?3?5?6@
CONST	SEGMENT
??_C@_0BI@HHELBBLE@CryptHashData?5failed?3?5?6@ DB 'CryptHashData failed:'
	DB	' ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BK@KFAHCNKC@CryptCreateHash?5failed?3?5?6@
CONST	SEGMENT
??_C@_0BK@KFAHCNKC@CryptCreateHash?5failed?3?5?6@ DB 'CryptCreateHash fai'
	DB	'led: ', 0aH, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@OKHNJLFG@CryptAcquireContext?5failed?3?5?6@
CONST	SEGMENT
??_C@_0BO@OKHNJLFG@CryptAcquireContext?5failed?3?5?6@ DB 'CryptAcquireCon'
	DB	'text failed: ', 0aH, 00H			; `string'
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$WinMainCRTStartup DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	04H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$1$?TCDB@@YAKPEAX@Z DD 021H
	DD	imagerel $LN67
	DD	imagerel $LN67+511
	DD	imagerel $unwind$?TCDB@@YAKPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$chain$0$?TCDB@@YAKPEAX@Z DD 020521H
	DD	0e3405H
	DD	imagerel $LN67
	DD	imagerel $LN67+511
	DD	imagerel $unwind$?TCDB@@YAKPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?TCDB@@YAKPEAX@Z DD 010401H
	DD	0e204H
xdata	ENDS
;	COMDAT voltbl
voltbl	SEGMENT
_volmd	DB	00H
voltbl	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?RealCode@@YAXXZ DD 061101H
	DD	01d0111H
	DD	060047005H
	DD	050023003H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?HashString@@YA_NPEBDPEAEAEAK@Z DD 081401H
	DD	0c6414H
	DD	0b5414H
	DD	0a3414H
	DD	070107214H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ReadConsoleA@@YAXPEADK@Z DD 040a01H
	DD	09340aH
	DD	07006520aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?WriteConsoleA@@YAXPEBD@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?EnumWindowsProc@@YAHPEAUHWND__@@_J@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dynamic_system_func_load@@YAP6A_JXZPEBD0@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
; Function compile flags: /Ogtpy
;	COMDAT WinMainCRTStartup
_TEXT	SEGMENT
threadId$ = 64
WinMainCRTStartup PROC					; COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 323
$LN8:
	sub	rsp, 56					; 00000038H
; Line 327
	lea	rax, QWORD PTR threadId$[rsp]
	xor	r9d, r9d
	mov	QWORD PTR [rsp+40], rax
	lea	r8, OFFSET FLAT:?TCDB@@YAKPEAX@Z	; TCDB
	xor	edx, edx
	mov	DWORD PTR [rsp+32], 0
	xor	ecx, ecx
	call	QWORD PTR __imp_CreateThread
	npad	6
$LL2@WinMainCRT:
; Line 338
	mov	ecx, 5
	call	QWORD PTR __imp_Sleep
; Line 339
	jmp	SHORT $LL2@WinMainCRT
WinMainCRTStartup ENDP
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?TCDB@@YAKPEAX@Z
_TEXT	SEGMENT
bDebuggerPresent$ = 48
hProcessDebugObject$ = 56
ftEnd$ = 64
ftStart$ = 72
stStart$ = 80
stEnd$ = 96
qwNativeElapsed$ = 128
dwReturned$ = 136
dwProcessDebugFlags$ = 144
dwProcessDebugPort$ = 152
?TCDB@@YAKPEAX@Z PROC					; TCDB, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 233
$LN67:
	sub	rsp, 120				; 00000078H
; Line 225
	mov	rax, QWORD PTR gs:96
; Line 227
	mov	rcx, QWORD PTR [rax+24]
	mov	rdx, QWORD PTR [rcx+16]
; Line 250
	lea	rcx, QWORD PTR stStart$[rsp]
; Line 229
	mov	eax, DWORD PTR [rdx+48]
	add	eax, 1048576				; 00100000H
	mov	DWORD PTR [rdx+64], eax
; Line 250
	call	QWORD PTR __imp_GetLocalTime
; Line 49
	lea	rcx, OFFSET FLAT:??_C@_09FLKFJBLM@ntdll?4dll@
	call	QWORD PTR __imp_GetModuleHandleA
; Line 51
	test	rax, rax
	jne	SHORT $LN55@TCDB
; Line 53
	lea	rcx, OFFSET FLAT:??_C@_09FLKFJBLM@ntdll?4dll@
	call	QWORD PTR __imp_LoadLibraryA
; Line 56
	test	rax, rax
	jne	SHORT $LN55@TCDB
; Line 60
	mov	QWORD PTR ?pfn_RtlCreateQueryDebugBuffer@@3P6APEAU_RTL_DEBUG_INFORMATION@@KK@ZEA, rax
	jmp	$LN63@TCDB
$LN55@TCDB:
; Line 58
	lea	rdx, OFFSET FLAT:??_C@_0BK@DLDGDFJN@RtlCreateQueryDebugBuffer@
	mov	rcx, rax
	call	QWORD PTR __imp_GetProcAddress
; Line 254
	mov	QWORD PTR ?pfn_RtlCreateQueryDebugBuffer@@3P6APEAU_RTL_DEBUG_INFORMATION@@KK@ZEA, rax
	test	rax, rax
	je	$LN63@TCDB
; Line 49
	lea	rcx, OFFSET FLAT:??_C@_09FLKFJBLM@ntdll?4dll@
	call	QWORD PTR __imp_GetModuleHandleA
; Line 51
	test	rax, rax
	jne	SHORT $LN54@TCDB
; Line 53
	lea	rcx, OFFSET FLAT:??_C@_09FLKFJBLM@ntdll?4dll@
	call	QWORD PTR __imp_LoadLibraryA
; Line 56
	test	rax, rax
	jne	SHORT $LN54@TCDB
; Line 60
	mov	QWORD PTR ?pfn_RtlDestroyQueryDebugBuffer@@3P6AJPEAU_RTL_DEBUG_INFORMATION@@@ZEA, rax
	jmp	$LN63@TCDB
$LN54@TCDB:
; Line 58
	lea	rdx, OFFSET FLAT:??_C@_0BL@KPBKBMEI@RtlDestroyQueryDebugBuffer@
	mov	rcx, rax
	call	QWORD PTR __imp_GetProcAddress
; Line 255
	mov	QWORD PTR ?pfn_RtlDestroyQueryDebugBuffer@@3P6AJPEAU_RTL_DEBUG_INFORMATION@@@ZEA, rax
	test	rax, rax
	je	$LN63@TCDB
; Line 49
	lea	rcx, OFFSET FLAT:??_C@_09FLKFJBLM@ntdll?4dll@
	call	QWORD PTR __imp_GetModuleHandleA
; Line 51
	test	rax, rax
	jne	SHORT $LN53@TCDB
; Line 53
	lea	rcx, OFFSET FLAT:??_C@_09FLKFJBLM@ntdll?4dll@
	call	QWORD PTR __imp_LoadLibraryA
; Line 56
	test	rax, rax
	jne	SHORT $LN53@TCDB
; Line 60
	mov	QWORD PTR ?pfn_RtlQueryProcessDebugInformation@@3P6AJKKPEAU_RTL_DEBUG_INFORMATION@@@ZEA, rax
	jmp	$LN63@TCDB
$LN53@TCDB:
; Line 58
	lea	rdx, OFFSET FLAT:??_C@_0CA@CHDGPPCA@RtlQueryProcessDebugInformation@
	mov	rcx, rax
	call	QWORD PTR __imp_GetProcAddress
; Line 256
	mov	QWORD PTR ?pfn_RtlQueryProcessDebugInformation@@3P6AJKKPEAU_RTL_DEBUG_INFORMATION@@@ZEA, rax
	test	rax, rax
	je	$LN63@TCDB
; Line 49
	lea	rcx, OFFSET FLAT:??_C@_09FLKFJBLM@ntdll?4dll@
	call	QWORD PTR __imp_GetModuleHandleA
; Line 51
	test	rax, rax
	jne	SHORT $LN52@TCDB
; Line 53
	lea	rcx, OFFSET FLAT:??_C@_09FLKFJBLM@ntdll?4dll@
	call	QWORD PTR __imp_LoadLibraryA
; Line 56
	test	rax, rax
	jne	SHORT $LN52@TCDB
; Line 60
	mov	QWORD PTR ?pfn_NtQueryInformationProcess@@3P6AHPEAXW4_PROCESSINFOCLASS@@0KPEAK@ZEA, rax
	jmp	$LN63@TCDB
$LN52@TCDB:
; Line 58
	lea	rdx, OFFSET FLAT:??_C@_0BK@EGDDIFMK@NtQueryInformationProcess@
	mov	rcx, rax
	call	QWORD PTR __imp_GetProcAddress
; Line 257
	mov	QWORD PTR ?pfn_NtQueryInformationProcess@@3P6AHPEAXW4_PROCESSINFOCLASS@@0KPEAK@ZEA, rax
	test	rax, rax
	je	$LN63@TCDB
; Line 49
	lea	rcx, OFFSET FLAT:??_C@_0N@MDJJJHMB@kernel32?4dll@
	call	QWORD PTR __imp_GetModuleHandleA
; Line 51
	test	rax, rax
	jne	SHORT $LN51@TCDB
; Line 53
	lea	rcx, OFFSET FLAT:??_C@_0N@MDJJJHMB@kernel32?4dll@
	call	QWORD PTR __imp_LoadLibraryA
; Line 56
	test	rax, rax
	jne	SHORT $LN51@TCDB
; Line 60
	mov	QWORD PTR ?pfn_IsDebuggerPresent@@3P6AHXZEA, rax
	jmp	SHORT $LN63@TCDB
$LN51@TCDB:
; Line 58
	lea	rdx, OFFSET FLAT:??_C@_0BC@KNBMEBEO@IsDebuggerPresent@
	mov	rcx, rax
	call	QWORD PTR __imp_GetProcAddress
; Line 258
	mov	QWORD PTR ?pfn_IsDebuggerPresent@@3P6AHXZEA, rax
	test	rax, rax
	je	SHORT $LN63@TCDB
; Line 49
	lea	rcx, OFFSET FLAT:??_C@_0N@MDJJJHMB@kernel32?4dll@
	call	QWORD PTR __imp_GetModuleHandleA
; Line 51
	test	rax, rax
	jne	SHORT $LN50@TCDB
; Line 53
	lea	rcx, OFFSET FLAT:??_C@_0N@MDJJJHMB@kernel32?4dll@
	call	QWORD PTR __imp_LoadLibraryA
; Line 56
	test	rax, rax
	je	SHORT $LN46@TCDB
$LN50@TCDB:
; Line 58
	lea	rdx, OFFSET FLAT:??_C@_0BL@FJLANNDC@CheckRemoteDebuggerPresent@
	mov	rcx, rax
	call	QWORD PTR __imp_GetProcAddress
$LN46@TCDB:
; Line 259
	mov	QWORD PTR ?pfn_CheckRemoteDebuggerPresent@@3P6AHPEAXPEAH@ZEA, rax
$LN63@TCDB:
; Line 264
	call	QWORD PTR ?pfn_IsDebuggerPresent@@3P6AHXZEA
	test	eax, eax
	jne	$LN62@TCDB
; Line 269
	xor	edx, edx
	mov	QWORD PTR [rsp+112], rbx
	xor	ecx, ecx
	call	QWORD PTR ?pfn_RtlCreateQueryDebugBuffer@@3P6APEAU_RTL_DEBUG_INFORMATION@@KK@ZEA
	mov	rbx, rax
; Line 270
	call	QWORD PTR __imp_GetCurrentProcessId
	mov	r8, rbx
	mov	edx, 4
	mov	ecx, eax
	call	QWORD PTR ?pfn_RtlQueryProcessDebugInformation@@3P6AJKKPEAU_RTL_DEBUG_INFORMATION@@@ZEA
	mov	rbx, QWORD PTR [rsp+112]
	test	eax, eax
	js	$LN62@TCDB
; Line 278
	call	QWORD PTR __imp_GetCurrentProcess
	mov	r9d, 8
	lea	r8, QWORD PTR hProcessDebugObject$[rsp]
	mov	rcx, rax
	lea	rax, QWORD PTR dwReturned$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	edx, QWORD PTR [r9+22]
	call	QWORD PTR ?pfn_NtQueryInformationProcess@@3P6AHPEAXW4_PROCESSINFOCLASS@@0KPEAK@ZEA
; Line 279
	test	eax, eax
	js	SHORT $LN4@TCDB
	cmp	QWORD PTR hProcessDebugObject$[rsp], 0
	jne	$LN62@TCDB
$LN4@TCDB:
; Line 285
	call	QWORD PTR __imp_GetCurrentProcess
	mov	r9d, 4
	lea	r8, QWORD PTR dwProcessDebugFlags$[rsp]
	mov	rcx, rax
	lea	rax, QWORD PTR dwReturned$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	edx, QWORD PTR [r9+27]
	call	QWORD PTR ?pfn_NtQueryInformationProcess@@3P6AHPEAXW4_PROCESSINFOCLASS@@0KPEAK@ZEA
; Line 286
	test	eax, eax
	js	SHORT $LN5@TCDB
	cmp	DWORD PTR dwProcessDebugFlags$[rsp], 0
	je	$LN62@TCDB
$LN5@TCDB:
; Line 291
	call	QWORD PTR __imp_GetCurrentProcess
	mov	r9d, 4
	lea	r8, QWORD PTR dwProcessDebugPort$[rsp]
	mov	rcx, rax
	lea	rax, QWORD PTR dwReturned$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	edx, QWORD PTR [r9+3]
	call	QWORD PTR ?pfn_NtQueryInformationProcess@@3P6AHPEAXW4_PROCESSINFOCLASS@@0KPEAK@ZEA
; Line 292
	test	eax, eax
	js	SHORT $LN6@TCDB
	cmp	DWORD PTR dwProcessDebugPort$[rsp], -1	; ffffffffH
	je	SHORT $LN62@TCDB
$LN6@TCDB:
; Line 298
	call	QWORD PTR __imp_GetCurrentProcess
	mov	rcx, rax
	lea	rdx, QWORD PTR bDebuggerPresent$[rsp]
	call	QWORD PTR ?pfn_CheckRemoteDebuggerPresent@@3P6AHPEAXPEAH@ZEA
	cmp	eax, 1
	jne	SHORT $LN7@TCDB
	cmp	DWORD PTR bDebuggerPresent$[rsp], eax
	je	SHORT $LN62@TCDB
$LN7@TCDB:
; Line 303
	lea	rcx, QWORD PTR stEnd$[rsp]
	call	QWORD PTR __imp_GetLocalTime
; Line 305
	lea	rdx, QWORD PTR ftStart$[rsp]
	lea	rcx, QWORD PTR stStart$[rsp]
	call	QWORD PTR __imp_SystemTimeToFileTime
	test	eax, eax
	je	SHORT $LN61@TCDB
; Line 307
	lea	rdx, QWORD PTR ftEnd$[rsp]
	lea	rcx, QWORD PTR stEnd$[rsp]
	call	QWORD PTR __imp_SystemTimeToFileTime
	test	eax, eax
	je	SHORT $LN61@TCDB
; Line 312
	mov	rax, QWORD PTR ftEnd$[rsp]
; Line 314
	cmp	rax, QWORD PTR ftStart$[rsp]
	je	SHORT $LN66@TCDB
; Line 319
	mov	eax, 1
; Line 320
	add	rsp, 120				; 00000078H
	ret	0
$LN61@TCDB:
; Line 308
	xor	eax, eax
; Line 320
	add	rsp, 120				; 00000078H
	ret	0
$LN62@TCDB:
; Line 300
	mov	ecx, 1
	call	QWORD PTR __imp_ExitProcess
	int	3
$LN66@TCDB:
; Line 316
	call	?RealCode@@YAXXZ			; RealCode
	int	3
$LN64@TCDB:
?TCDB@@YAKPEAX@Z ENDP					; TCDB
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?AntiDump@@YAXXZ
_TEXT	SEGMENT
?AntiDump@@YAXXZ PROC					; AntiDump, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 225
	mov	rax, QWORD PTR gs:96
; Line 227
	mov	rcx, QWORD PTR [rax+24]
	mov	rdx, QWORD PTR [rcx+16]
; Line 229
	mov	eax, DWORD PTR [rdx+48]
	add	eax, 1048576				; 00100000H
	mov	DWORD PTR [rdx+64], eax
; Line 230
	ret	0
?AntiDump@@YAXXZ ENDP					; AntiDump
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?RealCode@@YAXXZ
_TEXT	SEGMENT
windowRect$ = 48
charsWritten$1 = 56
charsWritten$2 = 60
hwnd$ = 64
csbi$ = 72
user_login_hash_bytes$ = 96
user_hash_bytes$ = 128
pass_login_hash_bytes$ = 160
pass_hash_bytes$ = 192
hashLen$ = 272
charsRead$3 = 280
charsRead$4 = 288
charsWritten$5 = 296
?RealCode@@YAXXZ PROC					; RealCode, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 168
$LN121:
	push	rbp
	push	rbx
	push	rsi
	push	rdi
	lea	rbp, QWORD PTR [rsp-63]
	sub	rsp, 232				; 000000e8H
; Line 169
	xor	esi, esi
; Line 170
	lea	rdx, QWORD PTR hwnd$[rbp-169]
	lea	rcx, OFFSET FLAT:?EnumWindowsProc@@YAHPEAUHWND__@@_J@Z ; EnumWindowsProc
	mov	QWORD PTR hwnd$[rbp-169], rsi
	call	QWORD PTR __imp_EnumWindows
; Line 172
	mov	ecx, -11				; fffffff5H
	call	QWORD PTR __imp_GetStdHandle
; Line 173
	mov	ecx, -10				; fffffff6H
	mov	rbx, rax
	call	QWORD PTR __imp_GetStdHandle
; Line 177
	lea	rdx, QWORD PTR csbi$[rbp-169]
	mov	rcx, rbx
	call	QWORD PTR __imp_GetConsoleScreenBufferInfo
; Line 179
	movsx	eax, WORD PTR csbi$[rbp-169]
	sub	eax, 50					; 00000032H
	cdq
	sub	eax, edx
	sar	eax, 1
	mov	ecx, eax
; Line 180
	movsx	eax, WORD PTR csbi$[rbp-167]
	sub	eax, 50					; 00000032H
	mov	WORD PTR windowRect$[rbp-169], cx
	cdq
	add	cx, 49					; 00000031H
	sub	eax, edx
; Line 181
	mov	WORD PTR windowRect$[rbp-165], cx
	sar	eax, 1
; Line 184
	lea	rcx, OFFSET FLAT:??_C@_08JNCFBAMI@Crack?5Me@
	mov	WORD PTR windowRect$[rbp-167], ax
	add	ax, 49					; 00000031H
	mov	WORD PTR windowRect$[rbp-163], ax
	call	QWORD PTR __imp_SetConsoleTitleA
; Line 185
	lea	r8, QWORD PTR windowRect$[rbp-169]
	mov	rcx, rbx
	lea	edx, QWORD PTR [rsi+1]
	call	QWORD PTR __imp_SetConsoleWindowInfo
; Line 189
	mov	ecx, 4096				; 00001000H
	call	?NewCharArray@@YAPEAD_K@Z		; NewCharArray
; Line 190
	mov	ecx, 4096				; 00001000H
	mov	rbx, rax
	call	?NewCharArray@@YAPEAD_K@Z		; NewCharArray
	mov	rdi, rax
; Line 195
	mov	DWORD PTR hashLen$[rbp-169], 32		; 00000020H
; Line 107
	lea	r10, OFFSET FLAT:??_C@_0EB@GCBIBAKK@22152bf604ed0ae4e799c3c6435b88e@
	mov	r8, -1
	npad	4
$LL110@RealCode:
	inc	r8
	cmp	BYTE PTR [r10+r8], sil
	jne	SHORT $LL110@RealCode
; Line 108
	test	r8b, 1
	jne	SHORT $LN11@RealCode
	shr	r8, 1
	cmp	r8, 32					; 00000020H
	ja	SHORT $LN11@RealCode
; Line 112
	mov	r9, rsi
	test	r8, r8
	je	SHORT $LN11@RealCode
$LL9@RealCode:
; Line 113
	movzx	ecx, BYTE PTR [r10+r9*2]
; Line 96
	lea	eax, DWORD PTR [rcx-48]
	cmp	al, 9
	ja	SHORT $LN14@RealCode
; Line 97
	sub	cl, 48					; 00000030H
	jmp	SHORT $LN13@RealCode
$LN14@RealCode:
; Line 98
	lea	eax, DWORD PTR [rcx-97]
	cmp	al, 5
	ja	SHORT $LN16@RealCode
; Line 99
	sub	cl, 87					; 00000057H
	jmp	SHORT $LN13@RealCode
$LN16@RealCode:
; Line 100
	lea	eax, DWORD PTR [rcx-65]
	cmp	al, 5
	ja	SHORT $LN18@RealCode
; Line 101
	sub	cl, 55					; 00000037H
	jmp	SHORT $LN13@RealCode
$LN18@RealCode:
; Line 103
	xor	cl, cl
$LN13@RealCode:
; Line 113
	movzx	edx, BYTE PTR [r10+r9*2+1]
; Line 96
	lea	eax, DWORD PTR [rdx-48]
	cmp	al, 9
	ja	SHORT $LN21@RealCode
; Line 97
	sub	dl, 48					; 00000030H
	jmp	SHORT $LN20@RealCode
$LN21@RealCode:
; Line 98
	lea	eax, DWORD PTR [rdx-97]
	cmp	al, 5
	ja	SHORT $LN23@RealCode
; Line 99
	sub	dl, 87					; 00000057H
	jmp	SHORT $LN20@RealCode
$LN23@RealCode:
; Line 100
	lea	eax, DWORD PTR [rdx-65]
	cmp	al, 5
	ja	SHORT $LN25@RealCode
; Line 101
	sub	dl, 55					; 00000037H
	jmp	SHORT $LN20@RealCode
$LN25@RealCode:
; Line 103
	xor	dl, dl
$LN20@RealCode:
; Line 113
	shl	cl, 4
	or	cl, dl
	mov	BYTE PTR user_login_hash_bytes$[rbp+r9-169], cl
	inc	r9
	cmp	r9, r8
	jb	SHORT $LL9@RealCode
$LN11@RealCode:
; Line 112
	mov	r8, rsi
	lea	r9, OFFSET FLAT:??_C@_0EB@PIIBGPBG@1b816939ff203c1f721f476a9f98862@
$LL30@RealCode:
; Line 113
	movzx	eax, BYTE PTR [r9+r8*2]
; Line 96
	lea	ecx, DWORD PTR [rax-48]
	cmp	cl, 9
	ja	SHORT $LN35@RealCode
; Line 97
	sub	al, 48					; 00000030H
	jmp	SHORT $LN34@RealCode
$LN35@RealCode:
; Line 98
	lea	ecx, DWORD PTR [rax-97]
	cmp	cl, 5
	ja	SHORT $LN37@RealCode
; Line 99
	sub	al, 87					; 00000057H
	jmp	SHORT $LN34@RealCode
$LN37@RealCode:
; Line 100
	lea	ecx, DWORD PTR [rax-65]
	cmp	cl, 5
	ja	SHORT $LN39@RealCode
; Line 101
	sub	al, 55					; 00000037H
	jmp	SHORT $LN34@RealCode
$LN39@RealCode:
; Line 103
	xor	al, al
$LN34@RealCode:
; Line 113
	movzx	edx, BYTE PTR [r9+r8*2+1]
; Line 96
	lea	ecx, DWORD PTR [rdx-48]
	cmp	cl, 9
	ja	SHORT $LN42@RealCode
; Line 97
	sub	dl, 48					; 00000030H
	jmp	SHORT $LN41@RealCode
$LN42@RealCode:
; Line 98
	lea	ecx, DWORD PTR [rdx-97]
	cmp	cl, 5
	ja	SHORT $LN44@RealCode
; Line 99
	sub	dl, 87					; 00000057H
	jmp	SHORT $LN41@RealCode
$LN44@RealCode:
; Line 100
	lea	ecx, DWORD PTR [rdx-65]
	cmp	cl, 5
	ja	SHORT $LN46@RealCode
; Line 101
	sub	dl, 55					; 00000037H
	jmp	SHORT $LN41@RealCode
$LN46@RealCode:
; Line 103
	xor	dl, dl
$LN41@RealCode:
; Line 113
	shl	al, 4
	or	al, dl
	mov	BYTE PTR pass_login_hash_bytes$[rbp+r8-169], al
	inc	r8
	cmp	r8, 32					; 00000020H
	jb	SHORT $LL30@RealCode
$LL2@RealCode:
; Line 83
	mov	ecx, -11				; fffffff5H
	call	QWORD PTR __imp_GetStdHandle
; Line 85
	lea	r9, QWORD PTR charsWritten$5[rbp-169]
	mov	QWORD PTR [rsp+32], rsi
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_06LCFEENDA@User?3?5@
	mov	r8d, 6
	call	QWORD PTR __imp_WriteConsoleA
; Line 89
	mov	ecx, -10				; fffffff6H
	call	QWORD PTR __imp_GetStdHandle
; Line 91
	lea	r9, QWORD PTR charsRead$3[rbp-169]
	mov	QWORD PTR [rsp+32], rsi
	mov	rcx, rax
	mov	r8d, 4096				; 00001000H
	mov	rdx, rbx
	call	QWORD PTR __imp_ReadConsoleA
; Line 92
	mov	eax, DWORD PTR charsRead$3[rbp-169]
; Line 83
	mov	ecx, -11				; fffffff5H
; Line 92
	add	eax, -2					; fffffffeH
	mov	BYTE PTR [rax+rbx], sil
; Line 83
	call	QWORD PTR __imp_GetStdHandle
; Line 85
	lea	r9, QWORD PTR charsWritten$1[rbp-169]
	mov	QWORD PTR [rsp+32], rsi
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_06PJGOMEEA@Pass?3?5@
	mov	r8d, 6
	call	QWORD PTR __imp_WriteConsoleA
; Line 89
	mov	ecx, -10				; fffffff6H
	call	QWORD PTR __imp_GetStdHandle
; Line 91
	lea	r9, QWORD PTR charsRead$4[rbp-169]
	mov	QWORD PTR [rsp+32], rsi
	mov	rcx, rax
	mov	r8d, 4096				; 00001000H
	mov	rdx, rdi
	call	QWORD PTR __imp_ReadConsoleA
; Line 92
	mov	eax, DWORD PTR charsRead$4[rbp-169]
; Line 210
	lea	r8, QWORD PTR hashLen$[rbp-169]
; Line 92
	add	eax, -2					; fffffffeH
; Line 210
	lea	rdx, QWORD PTR user_hash_bytes$[rbp-169]
	mov	rcx, rbx
; Line 92
	mov	BYTE PTR [rax+rdi], sil
; Line 210
	call	?HashString@@YA_NPEBDPEAEAEAK@Z		; HashString
; Line 211
	lea	r8, QWORD PTR hashLen$[rbp-169]
	mov	rcx, rdi
	lea	rdx, QWORD PTR pass_hash_bytes$[rbp-169]
	call	?HashString@@YA_NPEBDPEAEAEAK@Z		; HashString
; Line 159
	mov	r8d, DWORD PTR hashLen$[rbp-169]
	mov	edx, esi
	test	r8d, r8d
	je	SHORT $LN58@RealCode
	npad	1
$LL59@RealCode:
; Line 160
	mov	ecx, edx
	movzx	eax, BYTE PTR user_login_hash_bytes$[rbp+rcx-169]
	cmp	BYTE PTR user_hash_bytes$[rbp+rcx-169], al
	jne	SHORT $LN77@RealCode
; Line 159
	inc	edx
	cmp	edx, r8d
	jb	SHORT $LL59@RealCode
$LN58@RealCode:
	mov	edx, esi
	test	r8d, r8d
	je	SHORT $LN103@RealCode
	npad	5
$LL65@RealCode:
; Line 160
	mov	ecx, edx
	movzx	eax, BYTE PTR pass_login_hash_bytes$[rbp+rcx-169]
	cmp	BYTE PTR pass_hash_bytes$[rbp+rcx-169], al
	jne	SHORT $LN77@RealCode
; Line 159
	inc	edx
	cmp	edx, r8d
	jb	SHORT $LL65@RealCode
$LN103@RealCode:
; Line 214
	lea	rcx, OFFSET FLAT:??_C@_0BP@GLHKHOJH@Congratulations?5u?5now?5are?5gay?$CB@
	call	?WriteConsoleA@@YAXPEBD@Z		; WriteConsoleA
; Line 215
	xor	ecx, ecx
	call	QWORD PTR __imp_ExitProcess
	int	3
$LN77@RealCode:
; Line 83
	mov	ecx, -11				; fffffff5H
	call	QWORD PTR __imp_GetStdHandle
; Line 85
	lea	r9, QWORD PTR charsWritten$2[rbp-169]
	mov	QWORD PTR [rsp+32], rsi
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_07EPIGEAP@Wrong?$CB?6@
	mov	r8d, 7
	call	QWORD PTR __imp_WriteConsoleA
; Line 218
	jmp	$LL2@RealCode
$LN120@RealCode:
?RealCode@@YAXXZ ENDP					; RealCode
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?CompareByteArrays@@YA_NPEBE0K@Z
_TEXT	SEGMENT
arr1$ = 8
arr2$ = 16
len$ = 24
?CompareByteArrays@@YA_NPEBE0K@Z PROC			; CompareByteArrays, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 159
	xor	r9d, r9d
	test	r8d, r8d
	je	SHORT $LN3@CompareByt
	sub	rcx, rdx
	npad	5
$LL4@CompareByt:
; Line 160
	movzx	eax, BYTE PTR [rdx]
	cmp	BYTE PTR [rcx+rdx], al
	jne	SHORT $LN8@CompareByt
; Line 159
	inc	r9d
	inc	rdx
	cmp	r9d, r8d
	jb	SHORT $LL4@CompareByt
$LN3@CompareByt:
; Line 164
	mov	al, 1
; Line 165
	ret	0
$LN8@CompareByt:
; Line 161
	xor	al, al
; Line 165
	ret	0
?CompareByteArrays@@YA_NPEBE0K@Z ENDP			; CompareByteArrays
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?HashString@@YA_NPEBDPEAEAEAK@Z
_TEXT	SEGMENT
hHash$ = 48
hProv$ = 56
data$ = 80
hash$ = 88
hashLen$ = 96
charsWritten$1 = 104
charsWritten$2 = 104
charsWritten$3 = 104
?HashString@@YA_NPEBDPEAEAEAK@Z PROC			; HashString, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 118
$LN19:
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	mov	QWORD PTR [rax+24], rsi
	push	rdi
	sub	rsp, 64					; 00000040H
; Line 119
	xor	ebp, ebp
; Line 123
	mov	DWORD PTR [rax-40], -268435456		; f0000000H
	mov	rdi, r8
	mov	QWORD PTR [rax-16], rbp
	mov	rsi, rdx
	mov	QWORD PTR [rax-24], rbp
	mov	rbx, rcx
	xor	r8d, r8d
	lea	r9d, QWORD PTR [rbp+24]
	xor	edx, edx
	lea	rcx, QWORD PTR [rax-16]
	call	QWORD PTR __imp_CryptAcquireContextA
	test	eax, eax
	jne	SHORT $LN2@HashString
; Line 83
	mov	ecx, -11				; fffffff5H
	call	QWORD PTR __imp_GetStdHandle
; Line 85
	lea	r9, QWORD PTR charsWritten$3[rsp]
	mov	QWORD PTR [rsp+32], rbp
	mov	rcx, rax
	lea	r8d, QWORD PTR [rbp+29]
	lea	rdx, OFFSET FLAT:??_C@_0BO@OKHNJLFG@CryptAcquireContext?5failed?3?5?6@
	call	QWORD PTR __imp_WriteConsoleA
; Line 125
	xor	al, al
	jmp	$LN1@HashString
$LN2@HashString:
; Line 129
	mov	rcx, QWORD PTR hProv$[rsp]
	lea	rax, QWORD PTR hHash$[rsp]
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], rax
	xor	r8d, r8d
	mov	edx, 32780				; 0000800cH
	call	QWORD PTR __imp_CryptCreateHash
	test	eax, eax
	jne	SHORT $LN3@HashString
; Line 83
	mov	ecx, -11				; fffffff5H
	call	QWORD PTR __imp_GetStdHandle
; Line 85
	lea	r9, QWORD PTR charsWritten$2[rsp]
	mov	QWORD PTR [rsp+32], rbp
	mov	rcx, rax
	lea	rdx, OFFSET FLAT:??_C@_0BK@KFAHCNKC@CryptCreateHash?5failed?3?5?6@
	mov	r8d, 25
	call	QWORD PTR __imp_WriteConsoleA
; Line 131
	mov	rcx, QWORD PTR hProv$[rsp]
	xor	edx, edx
	call	QWORD PTR __imp_CryptReleaseContext
; Line 132
	xor	al, al
	jmp	$LN1@HashString
$LN3@HashString:
; Line 136
	mov	r8, -1
	npad	1
$LL15@HashString:
	inc	r8
	cmp	BYTE PTR [rbx+r8], bpl
	jne	SHORT $LL15@HashString
	mov	rcx, QWORD PTR hHash$[rsp]
	xor	r9d, r9d
	mov	rdx, rbx
	call	QWORD PTR __imp_CryptHashData
	test	eax, eax
	jne	SHORT $LN4@HashString
; Line 83
	mov	ecx, -11				; fffffff5H
	call	QWORD PTR __imp_GetStdHandle
; Line 85
	mov	r8d, 23
	lea	rdx, OFFSET FLAT:??_C@_0BI@HHELBBLE@CryptHashData?5failed?3?5?6@
$LN17@HashString:
; Line 156
	lea	r9, QWORD PTR charsWritten$1[rsp]
	mov	QWORD PTR [rsp+32], rbp
	mov	rcx, rax
	call	QWORD PTR __imp_WriteConsoleA
	mov	rcx, QWORD PTR hHash$[rsp]
	call	QWORD PTR __imp_CryptDestroyHash
	mov	rcx, QWORD PTR hProv$[rsp]
	xor	edx, edx
	call	QWORD PTR __imp_CryptReleaseContext
	xor	al, al
	jmp	SHORT $LN1@HashString
$LN4@HashString:
; Line 144
	mov	rcx, QWORD PTR hHash$[rsp]
	mov	r9, rdi
	mov	r8, rsi
	mov	DWORD PTR [rsp+32], ebp
	mov	edx, 2
	call	QWORD PTR __imp_CryptGetHashParam
	test	eax, eax
	jne	SHORT $LN5@HashString
; Line 83
	mov	ecx, -11				; fffffff5H
	call	QWORD PTR __imp_GetStdHandle
; Line 85
	mov	r8d, 27
	lea	rdx, OFFSET FLAT:??_C@_0BM@HCOHJBH@CryptGetHashParam?5failed?3?5?6@
; Line 148
	jmp	SHORT $LN17@HashString
$LN5@HashString:
; Line 152
	mov	rcx, QWORD PTR hHash$[rsp]
	call	QWORD PTR __imp_CryptDestroyHash
; Line 153
	mov	rcx, QWORD PTR hProv$[rsp]
	xor	edx, edx
	call	QWORD PTR __imp_CryptReleaseContext
; Line 155
	mov	al, 1
$LN1@HashString:
; Line 156
	mov	rbx, QWORD PTR [rsp+80]
	mov	rbp, QWORD PTR [rsp+88]
	mov	rsi, QWORD PTR [rsp+96]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?HashString@@YA_NPEBDPEAEAEAK@Z ENDP			; HashString
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?HexStringToByteArray@@YA_NPEBDPEAEK@Z
_TEXT	SEGMENT
hexString$ = 8
byteArray$ = 16
byteArrayLen$ = 24
?HexStringToByteArray@@YA_NPEBDPEAEK@Z PROC		; HexStringToByteArray, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 106
	mov	r11, rdx
	mov	r10, rcx
; Line 107
	mov	r9, -1
	npad	3
$LL26@HexStringT:
	inc	r9
	cmp	BYTE PTR [rcx+r9], 0
	jne	SHORT $LL26@HexStringT
; Line 108
	test	r9b, 1
	jne	$LN6@HexStringT
	shr	r9, 1
	mov	eax, r8d
	cmp	rax, r9
	jb	SHORT $LN6@HexStringT
; Line 112
	xor	r8d, r8d
	test	r9, r9
	je	SHORT $LN3@HexStringT
	npad	9
$LL4@HexStringT:
; Line 113
	movzx	eax, BYTE PTR [r10+r8*2]
; Line 96
	lea	ecx, DWORD PTR [rax-48]
	cmp	cl, 9
	ja	SHORT $LN9@HexStringT
; Line 97
	sub	al, 48					; 00000030H
	jmp	SHORT $LN8@HexStringT
$LN9@HexStringT:
; Line 98
	lea	ecx, DWORD PTR [rax-97]
	cmp	cl, 5
	ja	SHORT $LN11@HexStringT
; Line 99
	sub	al, 87					; 00000057H
	jmp	SHORT $LN8@HexStringT
$LN11@HexStringT:
; Line 100
	lea	ecx, DWORD PTR [rax-65]
	cmp	cl, 5
	ja	SHORT $LN13@HexStringT
; Line 101
	sub	al, 55					; 00000037H
	jmp	SHORT $LN8@HexStringT
$LN13@HexStringT:
; Line 103
	xor	al, al
$LN8@HexStringT:
; Line 113
	movzx	edx, BYTE PTR [r10+r8*2+1]
; Line 96
	lea	ecx, DWORD PTR [rdx-48]
	cmp	cl, 9
	ja	SHORT $LN16@HexStringT
; Line 97
	sub	dl, 48					; 00000030H
	jmp	SHORT $LN15@HexStringT
$LN16@HexStringT:
; Line 98
	lea	ecx, DWORD PTR [rdx-97]
	cmp	cl, 5
	ja	SHORT $LN18@HexStringT
; Line 99
	sub	dl, 87					; 00000057H
	jmp	SHORT $LN15@HexStringT
$LN18@HexStringT:
; Line 100
	lea	ecx, DWORD PTR [rdx-65]
	cmp	cl, 5
	ja	SHORT $LN20@HexStringT
; Line 101
	sub	dl, 55					; 00000037H
	jmp	SHORT $LN15@HexStringT
$LN20@HexStringT:
; Line 103
	xor	dl, dl
$LN15@HexStringT:
; Line 113
	shl	al, 4
	or	al, dl
	mov	BYTE PTR [r8+r11], al
	inc	r8
	cmp	r8, r9
	jb	SHORT $LL4@HexStringT
$LN3@HexStringT:
; Line 115
	mov	al, 1
; Line 116
	ret	0
$LN6@HexStringT:
; Line 109
	xor	al, al
; Line 116
	ret	0
?HexStringToByteArray@@YA_NPEBDPEAEK@Z ENDP		; HexStringToByteArray
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?HexCharToByte@@YAED@Z
_TEXT	SEGMENT
c$ = 8
?HexCharToByte@@YAED@Z PROC				; HexCharToByte, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 96
	lea	eax, DWORD PTR [rcx-48]
	cmp	al, 9
	ja	SHORT $LN2@HexCharToB
; Line 97
	lea	eax, DWORD PTR [rcx-48]
; Line 104
	ret	0
$LN2@HexCharToB:
; Line 98
	lea	eax, DWORD PTR [rcx-97]
	cmp	al, 5
	ja	SHORT $LN4@HexCharToB
; Line 99
	lea	eax, DWORD PTR [rcx-87]
; Line 104
	ret	0
$LN4@HexCharToB:
; Line 100
	lea	eax, DWORD PTR [rcx-65]
	cmp	al, 5
	ja	SHORT $LN6@HexCharToB
; Line 101
	lea	eax, DWORD PTR [rcx-55]
; Line 104
	ret	0
$LN6@HexCharToB:
; Line 103
	xor	al, al
; Line 104
	ret	0
?HexCharToByte@@YAED@Z ENDP				; HexCharToByte
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?ReadConsoleA@@YAXPEADK@Z
_TEXT	SEGMENT
charsRead$ = 64
buffer$ = 64
bufferSize$ = 72
?ReadConsoleA@@YAXPEADK@Z PROC				; ReadConsoleA, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 88
$LN4:
	mov	QWORD PTR [rsp+16], rbx
	push	rdi
	sub	rsp, 48					; 00000030H
	mov	rdi, rcx
	mov	ebx, edx
; Line 89
	mov	ecx, -10				; fffffff6H
	call	QWORD PTR __imp_GetStdHandle
; Line 91
	lea	r9, QWORD PTR charsRead$[rsp]
	mov	QWORD PTR [rsp+32], 0
	mov	rcx, rax
	mov	r8d, ebx
	mov	rdx, rdi
	call	QWORD PTR __imp_ReadConsoleA
; Line 92
	mov	eax, DWORD PTR charsRead$[rsp]
; Line 93
	mov	rbx, QWORD PTR [rsp+72]
	add	eax, -2					; fffffffeH
	mov	BYTE PTR [rax+rdi], 0
	add	rsp, 48					; 00000030H
	pop	rdi
	ret	0
?ReadConsoleA@@YAXPEADK@Z ENDP				; ReadConsoleA
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?WriteConsoleA@@YAXPEBD@Z
_TEXT	SEGMENT
message$ = 64
charsWritten$ = 72
?WriteConsoleA@@YAXPEBD@Z PROC				; WriteConsoleA, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 82
$LN5:
	push	rbx
	sub	rsp, 48					; 00000030H
	mov	rbx, rcx
; Line 83
	mov	ecx, -11				; fffffff5H
	call	QWORD PTR __imp_GetStdHandle
; Line 85
	mov	r8, -1
	npad	5
$LL3@WriteConso:
	inc	r8
	cmp	BYTE PTR [rbx+r8], 0
	jne	SHORT $LL3@WriteConso
	lea	r9, QWORD PTR charsWritten$[rsp]
	mov	QWORD PTR [rsp+32], 0
	mov	rdx, rbx
	mov	rcx, rax
	call	QWORD PTR __imp_WriteConsoleA
; Line 86
	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?WriteConsoleA@@YAXPEBD@Z ENDP				; WriteConsoleA
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?EnumWindowsProc@@YAHPEAUHWND__@@_J@Z
_TEXT	SEGMENT
hwnd$ = 48
lParam$ = 56
windowPID$ = 64
?EnumWindowsProc@@YAHPEAUHWND__@@_J@Z PROC		; EnumWindowsProc, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 71
$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx
; Line 73
	lea	rdx, QWORD PTR windowPID$[rsp]
	call	QWORD PTR __imp_GetWindowThreadProcessId
; Line 75
	call	QWORD PTR __imp_GetCurrentProcessId
	cmp	DWORD PTR windowPID$[rsp], eax
	jne	SHORT $LN2@EnumWindow
; Line 76
	mov	QWORD PTR [rdi], rbx
; Line 77
	xor	eax, eax
; Line 80
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN2@EnumWindow:
	mov	rbx, QWORD PTR [rsp+48]
	mov	eax, 1
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?EnumWindowsProc@@YAHPEAUHWND__@@_J@Z ENDP		; EnumWindowsProc
_TEXT	ENDS
; Function compile flags: /Ogtpy
;	COMDAT ?dynamic_system_func_load@@YAP6A_JXZPEBD0@Z
_TEXT	SEGMENT
module$ = 48
func$ = 56
?dynamic_system_func_load@@YAP6A_JXZPEBD0@Z PROC	; dynamic_system_func_load, COMDAT
; File C:\Users\Admin\Desktop\crackme-native\src\crackme.cpp
; Line 48
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, rdx
	mov	rbx, rcx
; Line 49
	call	QWORD PTR __imp_GetModuleHandleA
; Line 51
	test	rax, rax
	jne	SHORT $LN5@dynamic_sy
; Line 53
	mov	rcx, rbx
	call	QWORD PTR __imp_LoadLibraryA
; Line 56
	test	rax, rax
	jne	SHORT $LN5@dynamic_sy
; Line 61
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
$LN5@dynamic_sy:
; Line 58
	mov	rdx, rdi
	mov	rcx, rax
; Line 61
	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
; Line 58
	rex_jmp	QWORD PTR __imp_GetProcAddress
?dynamic_system_func_load@@YAP6A_JXZPEBD0@Z ENDP	; dynamic_system_func_load
_TEXT	ENDS
END
